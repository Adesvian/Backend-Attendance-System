generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(255)
  username String   @unique @db.VarChar(255)
  password String   @db.VarChar(255)
  role     String   @db.VarChar(100)
}

model Student {
  rfid      String   @id @db.VarChar(100)
  name      String   @db.VarChar(255)
  class     String   @db.VarChar(100)
  gender    String   @db.VarChar(100)
  parent_nid String   @db.VarChar(100)
  parent    Parent   @relation(fields: [parent_nid], references: [nid])
}

model Parent {
  nid        String    @id @db.VarChar(100)
  name       String    @db.VarChar(255)
  phone_num  String    @db.VarChar(100)
  students   Student[]
}

model Teacher {
  id     Int     @id @default(autoincrement())
  nid    String  @unique @db.VarChar(100)
  name   String  @db.VarChar(255)
  gender String  @db.VarChar(255)
  type   String  @db.VarChar(100)
  class  String?  @db.VarChar(100)
  classSchedules ClassSchedule[]
}

model Subject {
  id       Int     @id @default(autoincrement())
  name     String  @unique @db.VarChar(100)
  category String  @db.VarChar(100)
  classSchedules ClassSchedule[]
}

model Class {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(100)
  classSchedules ClassSchedule[]
}

model ClassSchedule {
  id         Int       @id @default(autoincrement())
  class_id   Int
  subject_id Int
  teacher_id Int
  day        String    @db.VarChar(100)
  start_time DateTime  @db.Time
  end_time   DateTime  @db.Time

  class      Class     @relation(fields: [class_id], references: [id])
  subject    Subject   @relation(fields: [subject_id], references: [id])
  teacher    Teacher   @relation(fields: [teacher_id], references: [id])

  @@unique([class_id, subject_id, teacher_id, day])
}

model WaSession {
  session_name String   @id @db.VarChar(100)
  status       String   @db.VarChar(100)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Permit {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(100)
  class      String  @db.VarChar(100)
  reason     String  @db.VarChar(100)
  attachment String  @db.VarChar(100)
  date       Int
  notes      String  @db.LongText
  status     String  @db.VarChar(100)
}

model AttendanceRecord {
  id           Int     @id @default(autoincrement())
  student_rfid String  @db.VarChar(100)
  student_name String  @db.VarChar(100)
  class        String  @db.VarChar(100)
  date         Int
  method       Int
  status       Int
}

model SubjectAttendance {
  id           Int     @id @default(autoincrement())
  student_rfid String  @db.VarChar(100)
  student_name String  @db.VarChar(100)
  class        String  @db.VarChar(100)
  date         Int
  subject      String  @db.VarChar(100)
}

model TimeThreshold {
  id     Int     @id @default(autoincrement())
  class  String  @db.VarChar(100)
  method Int
  time   DateTime @db.Time
}

